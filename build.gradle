plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'io.github.projectdepbro'
version = '0.1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'The Project DepBro Authors'
        )
    }
}

springBoot {
    buildInfo()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    def registry = System.getenv('IMAGE_REGISTRY')
    imageName = "${registry}/projectdepbro/${project.name}:${project.version}"
    docker {
        publishRegistry {
            token = System.getenv('IMAGE_REGISTRY_TOKEN')
        }
    }
}
